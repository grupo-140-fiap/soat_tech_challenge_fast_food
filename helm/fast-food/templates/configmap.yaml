apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "fast-food.fullname" . }}-config
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "fast-food.labels" . | nindent 4 }}
data:
  # Database Configuration
  DB_HOST: {{ .Values.env.DB_HOST | quote }}
  DB_PORT: {{ .Values.env.DB_PORT | quote }}
  DB_NAME: {{ .Values.env.DB_NAME | quote }}
  DB_USER: {{ .Values.env.DB_USER | quote }}
  
  # Application Configuration
  PORT: {{ .Values.env.PORT | quote }}
  GIN_MODE: {{ .Values.env.GIN_MODE | quote }}
  
  # Environment
  ENVIRONMENT: {{ .Values.env.ENVIRONMENT | quote }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "fast-food.fullname" . }}-mysql-init
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "fast-food.mysql.labels" . | nindent 4 }}
data:
  init.sql: |
    CREATE TABLE IF NOT EXISTS customers (
        id BIGINT AUTO_INCREMENT PRIMARY KEY,
        first_name VARCHAR(255) NOT NULL,
        last_name VARCHAR(255) NOT NULL,
        email VARCHAR(255) NOT NULL UNIQUE,
        cpf VARCHAR(14) NOT NULL UNIQUE,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    );

    CREATE TABLE IF NOT EXISTS products (
        id BIGINT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(255) NOT NULL,
        description TEXT,
        price DECIMAL(10, 2) NOT NULL,
        category ENUM('burger', 'side', 'drink', 'dessert') NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    );

    CREATE TABLE IF NOT EXISTS orders (
        id BIGINT AUTO_INCREMENT PRIMARY KEY,
        customer_id BIGINT,
        cpf VARCHAR(14),
        status ENUM('received', 'preparation', 'ready', 'finished') NOT NULL DEFAULT 'received',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        FOREIGN KEY (customer_id) REFERENCES customers(id) ON DELETE SET NULL
    );

    CREATE TABLE IF NOT EXISTS order_items (
        id BIGINT AUTO_INCREMENT PRIMARY KEY,
        order_id BIGINT NOT NULL,
        product_id BIGINT NOT NULL,
        quantity INT NOT NULL DEFAULT 1,
        price DECIMAL(10, 2) NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (order_id) REFERENCES orders(id) ON DELETE CASCADE,
        FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE
    );

    -- Insert sample data
    INSERT IGNORE INTO customers (first_name, last_name, email, cpf) VALUES
    ('João', 'Silva', 'joao.silva@email.com', '123.456.789-01'),
    ('Maria', 'Santos', 'maria.santos@email.com', '987.654.321-02');

    INSERT IGNORE INTO products (name, description, price, category) VALUES
    ('Big Burger', 'Hambúrguer artesanal com carne de 200g', 25.90, 'burger'),
    ('Batata Frita', 'Porção de batata frita crocante', 8.50, 'side'),
    ('Refrigerante', 'Coca-Cola 350ml', 5.00, 'drink'),
    ('Sorvete', 'Sorvete de chocolate', 7.50, 'dessert');